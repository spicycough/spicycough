---
import type { HTMLAttributes } from "astro/types";

import { fetchContentItem, handleFormData } from "./utils";
import { ChevronRight } from "@astropub/icons";
import Input from "@/components/ui/Input/Input.astro";
import { type ContentItem } from "@/db/schema";
import Button from "@/components/ui/Button/Button.astro";
import Separator from "@/components/ui/Separator/Separator.astro";
import { default as ApproveButton } from "@/pages/scrape/_ApproveButton.astro";
import { default as DenyButton } from "@/pages/scrape/_DenyButton.astro";
import { Card } from "@/components/ui/Card/index.astro";
import SummaryText from "@/pages/scrape/_SummaryText.astro";

export interface Props extends HTMLAttributes<"div"> {}

// const url = "https://www.nature.com/articles/s41584-023-00964-y";

const emptyContentItem: ContentItem = {
	id: 1,
	kind: "article" as const,
	title: "Title",
	authors: "Author",
	abstract: "",
	fullText: "",
	publishedAt: "Published at",
	sourceUrl: "https://example.com",
	slug: "",
	createdAt: null,
	updatedAt: null,
};

const { class: className, ...props } = Astro.props;

let contentItem: ContentItem = emptyContentItem;
if (Astro.request.method === "POST") {
	const data = await Astro.request.formData();
	try {
		const { url } = await handleFormData(data);
		contentItem = await fetchContentItem(url);
	} catch (error) {
		console.error(error);
	}
}

let { title, authors, publishedAt, fullText = "" } = contentItem;
---

<Card.Root
	class:list={[
		className,
		"flex h-full flex-col bg-gradient-to-b from-twilight-800 to-twilight-900",
	]}
	{...props}
>
	<Card.Header>
		<Card.Title>{title}</Card.Title>
		<Card.Description class="italic">{authors?.split("\n").join(", ")}</Card.Description>
		<div class="text-sm text-gray-500">{publishedAt}</div>
	</Card.Header>
	<Separator />
	<Card.Content class="grid h-full grid-cols-[1fr,min-content,1fr] gap-3 pt-6">
		<div class="overflow-y-scroll p-1 pl-3 rounded-lg">
			<h2 class="font-bold text-white opacity-100">Abstract</h2>
			<p>{fullText}</p>
		</div>
		<Separator orientation="vertical" class="self-stretch h-full" />
		<div class="overflow-y-scroll p-1 pl-3 rounded-lg">
			<h2 class="font-bold text-white">Summary</h2>
			<SummaryText fullText={fullText!} />
		</div>
	</Card.Content>
	<Separator />
	<Card.Footer class="pt-6">
		<form method="POST" class="flex justify-between items-center w-full">
			<div class="flex gap-4 w-2/5">
				<Input
					type="text"
					name="url"
					class="text-base placeholder:opacity-60"
					placeholder="Enter an article..."
				/>
				<Button type="submit" variant="secondary" class="rounded-lg">
					<ChevronRight />
				</Button>
			</div>
			<div class="flex gap-x-4">
				<DenyButton />
				<ApproveButton />
			</div>
		</form>
	</Card.Footer>
</Card.Root>
