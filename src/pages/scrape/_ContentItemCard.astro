---
import type { HTMLAttributes } from "astro/types";

import { handleFormData, scrapeUrl } from "./utils";
import { ChevronRight } from "@astropub/icons";
import Card from "@/components/ui/Card/Card.astro";
import Input from "@/components/ui/Input/Input.astro";
import CardHeader from "@/components/ui/Card/CardHeader.astro";
import CardTitle from "@/components/ui/Card/CardTitle.astro";
import CardContent from "@/components/ui/Card/CardContent.astro";
import CardFooter from "@/components/ui/Card/CardFooter.astro";
import { type NewContentItem } from "@/db/schema";
import CardDescription from "@/components/ui/Card/CardDescription.astro";
import Button from "@/components/ui/Button/Button.astro";
import Separator from "@/components/ui/Separator/Separator.astro";
import { default as ApproveButton } from "@/pages/scrape/_ApproveButton.astro";
import { default as DenyButton } from "@/pages/scrape/_DenyButton.astro";

export interface Props extends HTMLAttributes<"div"> {}

// const url = "https://www.nature.com/articles/s41584-023-00964-y";

const emptyContentItem: NewContentItem = {
	id: 1,
	type: "article" as const,
	title: "Title",
	authors: "Author",
	abstract: "Abstract",
	fullText: "Full text",
	publishedAt: "Published at",
	sourceUrl: "https://example.com",
	slug: "",
	createdAt: null,
	updatedAt: null,
};

const { class: className, ...props } = Astro.props;

let contentItem: NewContentItem = emptyContentItem;
if (Astro.request.method === "POST") {
	const data = await Astro.request.formData();
	try {
		const { url } = await handleFormData(data);
		contentItem = (await scrapeUrl(url)) ?? emptyContentItem;
	} catch (error) {
		console.error(error);
	}
}

let { title, authors, publishedAt, abstract } = contentItem;
---

<Card class:list={[className, "flex h-full flex-col"]} {...props}>
	<CardHeader>
		<CardTitle>{title}</CardTitle>
		<CardDescription class="">{authors?.split("\n").join(", ")}</CardDescription>
		<div class="text-sm text-gray-500">{publishedAt}</div>
	</CardHeader>
	<Separator />
	<CardContent class="grid h-full grid-cols-[1fr,min-content,1fr] p-0">
		<div class="p-0">
			<h2 class="font-bold">Abstract</h2>
			<p>{abstract}</p>
		</div>
		<Separator orientation="vertical" class="h-full self-stretch" />
		<div class="p-0">
			<h2 class="font-bold">AI Summary</h2>
			<p>More text</p>
		</div>
	</CardContent>
	<Separator />
	<CardFooter class="pt-6">
		<form method="POST" class="flex w-full items-center justify-between">
			<div class="flex w-2/5 gap-4">
				<Input
					type="text"
					name="url"
					class="text-base placeholder:opacity-60"
					placeholder="Enter an article..."
				/>
				<Button type="submit" variant="secondary" class="rounded-lg">
					<ChevronRight />
				</Button>
			</div>
			<div class="flex gap-x-4">
				<DenyButton />
				<ApproveButton />
			</div>
		</form>
	</CardFooter>
</Card>
