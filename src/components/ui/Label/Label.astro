---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const label = cva(
	"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
);

export interface Props extends HTMLAttributes<"label">, VariantProps<typeof label> {
	asChild?: boolean;
}

const { class: className, asChild, ...props } = Astro.props;
---

<sc-label class:list={[label(), className]} {...props}>
	<slot />
</sc-label>

<script>
	class Label extends HTMLElement {
		constructor() {
			super();

			// Prevent mouse down when double-clicking label
			this.addEventListener("mousedown", (event) => {
				if (!event.defaultPrevented && event.detail > 1) event.preventDefault();
			});
		}
	}

	customElements.define("sc-label", Label);
</script>
